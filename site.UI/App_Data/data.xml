<?xml version="1.0" encoding="utf-8"?>
<data>
  <articles>
    <article id="0">
      <title>Article Manager</title>
      <technos>ASP.NET;MVC5;jQuery;DI;Ninject</technos>
      <shortdescription>
        A content manager that allows you to create, edit and delete articles that feature a title, a description and multiple pages.
      </shortdescription>
      <longdescription>
&amp;lt;div class="row" style="padding: 0 90px; margin: 15px auto 40px auto; background-color: #e9e9e9;"&amp;gt;
&amp;lt;div class="col-md-6" style="font-size: 20px;"&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span style="color: #c0c0c0;"&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span style="color: #000000;"&amp;gt;&amp;lt;em&amp;gt;This is a Conte&amp;lt;/em&amp;gt;&amp;lt;em&amp;gt;nt Manager application built on MVC5 and jQuery.&amp;lt;/em&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span style="color: #000000;"&amp;gt;&amp;lt;em&amp;gt;The content manager is presented with traditional functionalities including creating, editing and deleting articles. Each article has a title, a description and multiple pages that will represent its content.&amp;lt;/em&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="col-md-6" style="text-align: center;"&amp;gt;&amp;lt;img style="width: 100%;" src="/images/article-manager.png" alt="" /&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
&amp;lt;p&amp;gt;This application allows the end user to create multiple articles (defined by their title and desription) and also create pages related to the article.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;the main page vertical menu contains all articles created.&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
&amp;lt;div class="col-md-4" style="text-align: center;"&amp;gt;&amp;lt;img style="width: 70%;" src="/images/article-menu.png" alt="" /&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class="col-md-8"&amp;gt;
&amp;lt;p&amp;gt;The menu on the left is used to navigate between the existing articles. To add a new article, the end-user can click on the last + item and an empty article will be shown.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;To modifiy an article, simply click on the title of the article on the menu, the title and description can be modified and then save the modification by clicking on the green save button above.&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;p style="text-align: center;"&amp;gt;&amp;lt;img style="width: 80%;" src="/images/article-buttons.png" alt="" /&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;To preview the article, click on the pink Preview button. This will take you to Article Reader application.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;note that the friendly url includes the article id&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;The black Delete button will prompt a confirmation dialog to accept or cancel deletion of the article&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
&amp;lt;div class="col-md-6"&amp;gt;
&amp;lt;p&amp;gt;Under the description, all the pages related to the article are presented in an editor. I used &amp;lt;a title="TinyMCE" href="https://www.tinymce.com/" target="_blank"&amp;gt;TinyMCE&amp;lt;/a&amp;gt;&amp;amp;nbsp;as a text editor. By clicking on the tabs, you can view each page, edit it and save it. A page can also be deleted by clicking on the black button and confirm.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;The + tab allows you to create new page inside the current article&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="col-md-6"&amp;gt;&amp;lt;img style="width: 100%;" src="/images/text-editor.png" alt="" /&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div style="padding: 0 90px;"&amp;gt;
&amp;lt;p&amp;gt;Eeach button action support AJAX update, either with&amp;amp;nbsp;&amp;amp;nbsp;@Ajax.ActionLink or with jQuery&amp;amp;nbsp;$.ajax functionality,&amp;amp;nbsp;eleminating the need to reload the entire page.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;</longdescription>
      <demo>http://demoarticlemanager.azurewebsites.net/</demo>
      <github>https://github.com/rafaagahbiche/demodata/tree/origin</github>
      <bigicon>/images/edit2.png</bigicon>
      <smallicon>/images/edit64.png</smallicon>
    </article>
    <article id="1">
      <title>Article Reader</title>
      <technos>ASP.NET;MVC5;jQuery;Bootstrap</technos>
      <shortdescription>
        After creating different articles with pages, this application displays the article title, description and related pages with a slider
      </shortdescription>
      <longdescription>
        &amp;lt;div class="row" style="padding: 0 90px; margin: 15px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12" style="font-size: 20px;"&amp;gt;
        &amp;lt;p&amp;gt;After writing an article with multiple pages as content, Article reader is the application that allows the end user to display the article content.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;The page is based on responsive client-side layout based on Bootstrap&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12"&amp;gt;
        &amp;lt;p&amp;gt;Since the article is brought down to different pages, I created a slider as a custom jQuery plugin to navigate through the pages and never reload the page.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;To navigate through the pages, the end user can use either the left/right arrows on the top of the pages or the left/right keyboard&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      </longdescription>
      <demo>http://demoarticlemanager.azurewebsites.net/article-viewer/1/editor</demo>
      <github>https://github.com/rafaagahbiche/demodata/tree/origin</github>
      <bigicon>/images/ebook.png</bigicon>
      <smallicon>/images/ebook64.png</smallicon>
    </article>
    <article id="2">
      <title>City Info</title>
      <technos>AngularJs;Bootstrap;DI</technos>
      <shortdescription>
        My first Angular application. Search for a city to display an image from Google Image, get weather forecast and upcoming events in the city.
      </shortdescription>
      <longdescription>
        &amp;lt;div class="row" style="padding: 0 90px; margin: 15px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12" style="font-size: 20px;"&amp;gt;
        &amp;lt;p&amp;gt;City Info is my first AngularJs application I have built. The end user can enter a name of a city and it instantly displays informations about the selected city. I use free API to get informations like an image, weather forecast and upcoming events.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;The page is based on responsive client-side layout based on Bootstrap&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12"&amp;gt;
        &amp;lt;h2&amp;gt;Search&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;I use the Google map autocomplete (google.maps.places.Autocomplete) using &amp;lt;span style="text-decoration: underline; color: #0000ff;"&amp;gt; &amp;lt;a href="https://gist.github.com/VictorBjelkholm/6687484" target="_blank"&amp;gt; &amp;lt;span style="color: #0000ff; text-decoration: underline;"&amp;gt;this trick&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; as autocomplete functionality to get city name, and then get latitude and langitude properties to use them to get informations from other APIs.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;Google map autocomplete object include images for the selected city, so I randomly display the first in the list.&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12"&amp;gt;
        &amp;lt;h2&amp;gt;Weather forecast&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;To get the weather forecast I call &amp;lt;span style="text-decoration: underline; color: #0000ff;"&amp;gt; &amp;lt;a href="http://api.openweathermap.org/data/2.5/" target="_blank"&amp;gt; &amp;lt;span style="color: #0000ff; text-decoration: underline;"&amp;gt;OpenWeatherMap API&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; with latitude and langitude parameters. The response is a json object wrapping information like max and min temperature, weather description... which make it easy to parse.&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="row" style="padding: 0 90px; margin: 40px auto 40px auto;"&amp;gt;
        &amp;lt;div class="col-md-12"&amp;gt;
        &amp;lt;h2&amp;gt;Upcoming events&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;Current week events are pulled from &amp;lt;span style="text-decoration: underline; color: #0000ff;"&amp;gt; &amp;lt;a href="http://api.eventful.com/" target="_blank"&amp;gt; &amp;lt;span style="color: #0000ff; text-decoration: underline;"&amp;gt;Eventful API&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; using latitude and langitude of the selected city. The response is a json object wrapping information about the event like title, description, image, location...&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      </longdescription>
      <demo>http://cityinfodemo.azurewebsites.net/cityinfo/</demo>
      <github>https://github.com/rafaagahbiche/cityinfo/</github>
      <bigicon>/images/earth128.png</bigicon>
      <smallicon>/images/earth64.png</smallicon>
    </article>
  </articles>
</data>